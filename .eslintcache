[{"/home/mintian/pku/vis/survey_recommend_paper/src/reportWebVitals.js":"1","/home/mintian/pku/vis/survey_recommend_paper/src/Views/NodeView/index.js":"2","/home/mintian/pku/vis/survey_recommend_paper/src/App.js":"3","/home/mintian/pku/vis/survey_recommend_paper/src/Views/DetailView/index.js":"4","/home/mintian/pku/vis/survey_recommend_paper/src/Views/RecommendView/index.js":"5","/home/mintian/pku/vis/survey_recommend_paper/src/index.js":"6"},{"size":362,"mtime":1609254760810,"results":"7","hashOfConfig":"8"},{"size":3819,"mtime":1609872537000,"results":"9","hashOfConfig":"8"},{"size":3383,"mtime":1610119520860,"results":"10","hashOfConfig":"8"},{"size":423,"mtime":1609270498370,"results":"11","hashOfConfig":"8"},{"size":532,"mtime":1609271090500,"results":"12","hashOfConfig":"8"},{"size":529,"mtime":1610118480700,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jei6ae",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mintian/pku/vis/survey_recommend_paper/src/reportWebVitals.js",[],"/home/mintian/pku/vis/survey_recommend_paper/src/Views/NodeView/index.js",["27","28"],"import React, { useState, useEffect } from \"react\";\nimport \"./index.scss\";\nimport * as d3 from \"d3\";\n\nconst scale = d3.scaleOrdinal(d3.schemeCategory10);\nconst color = (d) => scale(d.type);\n\nconst drag = (simulation) => {\n  const dragstarted = (event) => {\n    if (!event.active) simulation.alphaTarget(0.3).restart();\n    event.subject.fx = event.subject.x;\n    event.subject.fy = event.subject.y;\n  };\n\n  const dragged = (event) => {\n    event.subject.fx = event.x;\n    event.subject.fy = event.y;\n  };\n\n  const dragended = (event) => {\n    if (!event.active) simulation.alphaTarget(0);\n    event.subject.fx = null;\n    event.subject.fy = null;\n  };\n\n  return d3\n    .drag()\n    .on(\"start\", dragstarted)\n    .on(\"drag\", dragged)\n    .on(\"end\", dragended);\n};\n\nconst NodeView = React.memo(({ data, setSelectedNode }) => {\n  const { nodes, links } = data;\n\n  console.log(nodes, links);\n\n  const [clientWidth, setClientWidth] = useState(0);\n  const [clientHeight, setClientHeight] = useState(0);\n  // const xPos = d3.scaleLinear().domain([1990, 2020]).range([0, clientWidth]);\n  // nodes.forEach(node => {\n  //   node.fx =  node.data.year ? xPos(node.data.year) : null\n  // })\n  useEffect(() => {\n    const clientRect = d3.select(\".NodeView\").node().getBoundingClientRect();\n    setClientWidth(clientRect.width);\n    setClientHeight(clientRect.height);\n  }, []);\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force(\n      \"link\",\n      d3.forceLink(links).id((d) => d.id)\n    )\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(clientWidth / 2, clientHeight / 2));\n\n  const svg = d3.select(\"#node-view-svg\");\n\n  svg.selectAll(\"*\").remove();\n\n  const linkG = svg.append(\"g\").attr(\"id\", \"link-g\").attr(\"stroke\", \"#999\");\n  const link = linkG\n    .selectAll(\"line\")\n    .data(links)\n    .join(\"line\")\n    .attr(\"stroke-width\", 1)\n    .attr(\"stroke-opacity\", 0.6)\n    .attr(\"pointer-events\", \"none\");\n\n  const nodeG = svg\n    .append(\"g\")\n    .attr(\"id\", \"node-g\")\n    .attr(\"stroke\", \"#fff\")\n    .attr(\"stroke-width\", 1.5);\n  const node = nodeG\n    .selectAll(\"circle\")\n    .data(nodes)\n    .join(\"circle\")\n    .attr(\"id\", (d) => d.id)\n    .attr(\"r\", 5)\n    .attr(\"fill\", color)\n    .style(\"cursor\", \"pointer\")\n    .on(\"click\", (e, d) => {\n      // console.log(\"d\", d);\n      setSelectedNode(d);\n      e.stopPropagation();\n      handleClick(d);\n    })\n    .call(drag(simulation));\n  const handleClick = (d) => {\n    const highlightSet = new Set([...d.cite_list, ...d.cited_list, d.id]);\n    // console.log(\"highlightSet\", node, highlightSet);\n    d3.selectAll(\"circle\").attr(\"opacity\", (d) =>\n      highlightSet.has(d.id) ? 1 : 0.2\n    );\n    d3.selectAll(\"circle\").attr(\"stroke\", (dd) =>\n      dd.id == d.id ? \"#f03b20\" : null\n    );\n    d3.selectAll(\"circle\").attr(\"stroke-width\", (dd) =>\n      dd.id == d.id ? 2.4 : null\n    );\n    d3.selectAll(\"line\").attr(\"stroke-opacity\", (dd) =>\n      // dd.source.id == d.id || dd.target.id == d.id ? 0.6 : 0.1\n      highlightSet.has(dd.source.id) && highlightSet.has(dd.target.id)\n        ? 0.6\n        : 0.1\n    );\n  };\n  simulation.on(\"tick\", () => {\n    link\n      .attr(\"x1\", (d) => d.source.x)\n      .attr(\"y1\", (d) => d.source.y)\n      .attr(\"x2\", (d) => d.target.x)\n      .attr(\"y2\", (d) => d.target.y);\n    node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n  });\n\n  const clickBackGround = () => {\n    d3.selectAll(\"circle\").attr(\"opacity\", 1\n    );\n    d3.selectAll(\"circle\").attr(\"stroke\", null\n    );\n    d3.selectAll(\"circle\").attr(\"stroke-width\", 1.5);\n    d3.selectAll(\"line\").attr(\"stroke-opacity\", 0.6);\n  };\n\n  return (\n    <div className=\"NodeView\">\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        id=\"node-view-svg\"\n        onClick={clickBackGround}\n      />\n    </div>\n  );\n});\n\nexport default NodeView;\n","/home/mintian/pku/vis/survey_recommend_paper/src/App.js",[],"/home/mintian/pku/vis/survey_recommend_paper/src/Views/DetailView/index.js",["29"],"/home/mintian/pku/vis/survey_recommend_paper/src/Views/RecommendView/index.js",[],"/home/mintian/pku/vis/survey_recommend_paper/src/index.js",[],{"ruleId":"30","severity":1,"message":"31","line":99,"column":13,"nodeType":"32","messageId":"33","endLine":99,"endColumn":15},{"ruleId":"30","severity":1,"message":"31","line":102,"column":13,"nodeType":"32","messageId":"33","endLine":102,"endColumn":15},{"ruleId":"34","severity":1,"message":"35","line":4,"column":26,"nodeType":"36","messageId":"37","endLine":4,"endColumn":36},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'cited_list' is assigned a value but never used.","Identifier","unusedVar"]