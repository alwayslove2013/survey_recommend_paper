{"version":3,"sources":["Views/NodeView/index.js","Views/DetailView/index.js","Views/RecommendView/index.js","App.js","reportWebVitals.js","index.js"],"names":["scale","d3","color","d","type","NodeView","React","memo","data","setSelectedNode","nodes","links","console","log","useState","clientWidth","setClientWidth","clientHeight","setClientHeight","useEffect","clientRect","node","getBoundingClientRect","width","height","simulation","force","id","svg","selectAll","remove","link","append","attr","join","style","on","e","stopPropagation","handleClick","call","event","active","alphaTarget","restart","subject","fx","x","fy","y","drag","highlightSet","Set","cite_list","cited_list","has","dd","source","target","className","onClick","DetailView","selectedNode","title","doi","author","year","RecommendView","cite_node_list","cited_node_list","map","App","setData","citeCount","setCiteCount","citedCount","setCitedCount","a","filter","cited_count","cite_count","nodeSet","forEach","cite_doi","push","getData","indexOf","min","max","defaultValue","onChange","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.256b5129.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./index.scss\";\nimport * as d3 from \"d3\";\n\nconst scale = d3.scaleOrdinal(d3.schemeCategory10);\nconst color = (d) => scale(d.type);\n\nconst drag = (simulation) => {\n  const dragstarted = (event) => {\n    if (!event.active) simulation.alphaTarget(0.3).restart();\n    event.subject.fx = event.subject.x;\n    event.subject.fy = event.subject.y;\n  };\n\n  const dragged = (event) => {\n    event.subject.fx = event.x;\n    event.subject.fy = event.y;\n  };\n\n  const dragended = (event) => {\n    if (!event.active) simulation.alphaTarget(0);\n    event.subject.fx = null;\n    event.subject.fy = null;\n  };\n\n  return d3\n    .drag()\n    .on(\"start\", dragstarted)\n    .on(\"drag\", dragged)\n    .on(\"end\", dragended);\n};\n\nconst NodeView = React.memo(({ data, setSelectedNode }) => {\n  const { nodes, links } = data;\n\n  console.log(nodes, links);\n\n  const [clientWidth, setClientWidth] = useState(0);\n  const [clientHeight, setClientHeight] = useState(0);\n  // const xPos = d3.scaleLinear().domain([1990, 2020]).range([0, clientWidth]);\n  // nodes.forEach(node => {\n  //   node.fx =  node.data.year ? xPos(node.data.year) : null\n  // })\n  useEffect(() => {\n    const clientRect = d3.select(\".NodeView\").node().getBoundingClientRect();\n    setClientWidth(clientRect.width);\n    setClientHeight(clientRect.height);\n  }, []);\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force(\n      \"link\",\n      d3.forceLink(links).id((d) => d.id)\n    )\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(clientWidth / 2, clientHeight / 2));\n\n  const svg = d3.select(\"#node-view-svg\");\n\n  svg.selectAll(\"*\").remove();\n\n  const linkG = svg.append(\"g\").attr(\"id\", \"link-g\").attr(\"stroke\", \"#999\");\n  const link = linkG\n    .selectAll(\"line\")\n    .data(links)\n    .join(\"line\")\n    .attr(\"stroke-width\", 1)\n    .attr(\"stroke-opacity\", 0.6)\n    .attr(\"pointer-events\", \"none\");\n\n  const nodeG = svg\n    .append(\"g\")\n    .attr(\"id\", \"node-g\")\n    .attr(\"stroke\", \"#fff\")\n    .attr(\"stroke-width\", 1.5);\n  const node = nodeG\n    .selectAll(\"circle\")\n    .data(nodes)\n    .join(\"circle\")\n    .attr(\"id\", (d) => d.id)\n    .attr(\"r\", 5)\n    .attr(\"fill\", color)\n    .style(\"cursor\", \"pointer\")\n    .on(\"click\", (e, d) => {\n      // console.log(\"d\", d);\n      setSelectedNode(d);\n      e.stopPropagation();\n      handleClick(d);\n    })\n    .call(drag(simulation));\n  const handleClick = (d) => {\n    const highlightSet = new Set([...d.cite_list, ...d.cited_list, d.id]);\n    // console.log(\"highlightSet\", node, highlightSet);\n    d3.selectAll(\"circle\").attr(\"opacity\", (d) =>\n      highlightSet.has(d.id) ? 1 : 0.2\n    );\n    d3.selectAll(\"circle\").attr(\"stroke\", (dd) =>\n      dd.id == d.id ? \"#f03b20\" : null\n    );\n    d3.selectAll(\"circle\").attr(\"stroke-width\", (dd) =>\n      dd.id == d.id ? 2.4 : null\n    );\n    d3.selectAll(\"line\").attr(\"stroke-opacity\", (dd) =>\n      // dd.source.id == d.id || dd.target.id == d.id ? 0.6 : 0.1\n      highlightSet.has(dd.source.id) && highlightSet.has(dd.target.id)\n        ? 0.6\n        : 0.1\n    );\n  };\n  simulation.on(\"tick\", () => {\n    link\n      .attr(\"x1\", (d) => d.source.x)\n      .attr(\"y1\", (d) => d.source.y)\n      .attr(\"x2\", (d) => d.target.x)\n      .attr(\"y2\", (d) => d.target.y);\n    node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n  });\n\n  const clickBackGround = () => {\n    d3.selectAll(\"circle\").attr(\"opacity\", 1\n    );\n    d3.selectAll(\"circle\").attr(\"stroke\", null\n    );\n    d3.selectAll(\"circle\").attr(\"stroke-width\", 1.5);\n    d3.selectAll(\"line\").attr(\"stroke-opacity\", 0.6);\n  };\n\n  return (\n    <div className=\"NodeView\">\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        id=\"node-view-svg\"\n        onClick={clickBackGround}\n      />\n    </div>\n  );\n});\n\nexport default NodeView;\n","import React from \"react\";\n\nconst DetailView = React.memo(({ selectedNode }) => {\n  const { id, data = {}, cited_list = [] } = selectedNode;\n  // console.log(id, data, cited_list);\n  return (\n    <div className=\"DetailView\">\n      <div>title: {data.title}</div>\n      <div>doi: {data.doi || id}</div>\n      <div>author: {data.author}</div>\n      <div>year: {data.year}</div>\n    </div>\n  );\n});\n\nexport default DetailView;\n","import React from \"react\";\nimport './index.scss';\n\nconst RecommendView = React.memo(({ cite_node_list, cited_node_list }) => {\n  console.log(cite_node_list, cited_node_list);\n  return <div className=\"RecommendView\">\n    <div>\n      cite:\n    </div>\n    {cite_node_list.map(node => (<div key={node.id}>\n      {node.data.title || node.id}\n    </div>))}\n    <br/>\n    <div>\n      cited:\n    </div>\n    {cited_node_list.map(node => (<div key={node.id}>\n      {node.data.title}\n    </div>))}\n  </div>;\n});\n\nexport default RecommendView;\n","import \"./App.scss\";\nimport NodeView from \"./Views/NodeView\";\nimport DetailView from \"./Views/DetailView\";\nimport RecommendView from \"./Views/RecommendView\";\nimport * as d3 from \"d3\";\nimport React, { useState, useEffect } from \"react\";\nimport { InputNumber } from \"antd\";\n\nfunction App() {\n  const [data, setData] = useState({\n    nodes: [],\n    links: [],\n  });\n  const [citeCount, setCiteCount] = useState(4);\n  const [citedCount, setCitedCount] = useState(4);\n  useEffect(() => {\n    const getData = async () => {\n      // let nodes = await d3.json(\"[20201228]survey_nodes.json\");\n      let nodes = await d3.json(\"[20210105]survey_nodes.json\");\n      nodes = nodes.filter(\n        (node) =>\n          node.type === \"in_survey\" ||\n          node.cited_count >= citeCount ||\n          node.cite_count >= citedCount\n      );\n      const nodeSet = new Set(nodes.map((node) => node.id));\n      const links = [];\n      nodes.forEach((node) => {\n        // if (node.type === \"in_survey\") {\n        //   node.cite_list.forEach(\n        //     (cite_doi) =>\n        //       nodeSet.has(cite_doi) &&\n        //       links.push({\n        //         source: node.id,\n        //         target: cite_doi,\n        //       })\n        //   );\n        // }\n        node.cite_list.forEach(\n          (cite_doi) =>\n            nodeSet.has(cite_doi) &&\n            links.push({\n              source: node.id,\n              target: cite_doi,\n            })\n        );\n        node[\"type\"] =\n          node.type === \"in_survey\"\n            ? \"survey\"\n            : node.cited_count > node.cite_count;\n      });\n      setData({\n        nodes,\n        links,\n      });\n    };\n    getData();\n  }, [citeCount, citedCount]);\n  const [selectedNode, setSelectedNode] = useState({});\n  console.log(\"select\", selectedNode);\n  const cite_node_list = data.nodes.filter(\n    (node) => (selectedNode.cite_list || []).indexOf(node.id) > -1\n  );\n  const cited_node_list = data.nodes.filter(\n    (node) => (selectedNode.cited_list || []).indexOf(node.id) > -1\n  );\n  return (\n    <div className=\"App\">\n      <div className=\"NodeViewContainer\">\n        <NodeView data={data} setSelectedNode={setSelectedNode} />\n      </div>\n      <div className=\"RecommendViewContainer\">\n        <RecommendView\n          cite_node_list={cite_node_list}\n          cited_node_list={cited_node_list}\n        />\n      </div>\n      <div className=\"DetailViewContainer\">\n        <DetailView selectedNode={selectedNode} />\n      </div>\n      <div className=\"ControlPanel\">\n        <div className=\"panelItem\">\n          <div className=\"panelItem-title\">cite count &ge;</div>\n          <div className=\"panelItem-component\">\n            <InputNumber\n              min={1}\n              max={10}\n              style={{ width: 50}}\n              defaultValue={citeCount}\n              onChange={setCiteCount}\n              size=\"small\"\n            />\n          </div>\n        </div>\n        <div className=\"panelItem\">\n          <div className=\"panelItem-title\">cited count &ge; </div>\n          <div className=\"panelItem-component\">\n            <InputNumber\n              min={1}\n              max={10}\n              style={{ width: 50}}\n              defaultValue={citedCount}\n              onChange={setCitedCount}\n              size=\"small\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}